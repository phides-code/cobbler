on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4.1.1

            - name: Setup Node.js
              uses: actions/setup-node@v4.0.2

            - name: Install dependencies
              run: npm install

            - name: 'Create env file'
              run: |
                  touch .env
                  echo VITE_IMAGE_SERVICE_URL=${{ secrets.VITE_IMAGE_SERVICE_URL }} >> .env
                  echo VITE_IMAGE_SERVICE_API_KEY=${{ secrets.VITE_IMAGE_SERVICE_API_KEY }} >> .env

                  echo VITE_RECIPES_SERVICE_URL=${{ secrets.VITE_RECIPES_SERVICE_URL }} >> .env
                  echo VITE_RECIPES_SERVICE_API_KEY=${{ secrets.VITE_RECIPES_SERVICE_API_KEY }} >> .env

                  echo VITE_URL_PREFIX=${{ secrets.VITE_URL_PREFIX }} >> .env

            - name: Build
              run: npm run build

            - name: Archive dist directory
              uses: actions/upload-artifact@v4.3.1
              with:
                  name: dist
                  path: dist

    #   test:
    #     runs-on: ubuntu-latest
    #     needs: build
    #     steps:
    #       - uses: actions/checkout@v4.1.1

    #       - name: Setup Node.js
    #         uses: actions/setup-node@v4.0.2

    #       - name: Install dependencies for testing
    #         run: npm install

    #       - name: Run Tests
    #         run: npm run test

    deploy:
        runs-on: ubuntu-latest
        # needs: [test, build]
        needs: [build]
        env:
            AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            SOURCE_DIR: 'dist'
        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4.1.2
              with:
                  name: dist
                  path: dist

            # Step 1: Clean out old index.html
            - name: Sync index.html (clean outdated top-level files)
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: >
                      --delete
                      --exclude "*"
                      --include "index.html"

            # Step 2: Clean old JS/CSS assets (will delete ones not in current build)
            - name: Clean old CSS/JS assets
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: >
                      --delete
                      --exclude "*"
                      --include "assets/*.js"
                      --include "assets/*.css"

            # Step 3: Upload current CSS/JS
            - name: Sync new CSS/JS assets
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: >
                      --exclude "*"
                      --include "assets/*.js"
                      --include "assets/*.css"

            - name: Invalidate CloudFront
              uses: chetan/invalidate-cloudfront-action@v2
              env:
                  DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION }}
                  PATHS: '/*'
                  AWS_REGION: ${{ secrets.AWS_REGION }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
